name: Deploy ReadyBear

on:
  push:
    branches:
      - qa  # Ejecutar solo en la rama 'qa'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v4

      - name: Verificar que los secrets est√°n configurados
        run: |
          if [ -z "${{ secrets.EC2_HOST }}" ]; then
            echo "‚ùå ERROR: EC2_HOST no est√° configurado en GitHub Secrets"
            exit 1
          fi
          if [ -z "${{ secrets.SSH_PRIVATE_KEY }}" ]; then
            echo "‚ùå ERROR: SSH_PRIVATE_KEY no est√° configurado en GitHub Secrets"
            exit 1
          fi
          echo "‚úÖ Secrets verificados correctamente."

      - name: Configurar clave SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' > ~/.ssh/readybear-key.pem
          chmod 600 ~/.ssh/readybear-key.pem
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Verificar conexi√≥n SSH con EC2
        run: |
          ssh -i ~/.ssh/readybear-key.pem ec2-user@${{ secrets.EC2_HOST }} "echo '‚úÖ Conexi√≥n establecida con EC2'"

      - name: Desplegar en EC2
        run: |
          ssh -i ~/.ssh/readybear-key.pem ec2-user@${{ secrets.EC2_HOST }} << 'EOF'
            set -e
            echo "üöÄ Iniciando despliegue en Amazon Linux 2023"

            # Verificar y actualizar el c√≥digo
            cd ~/ReadyBear26 || exit 1
            git reset --hard origin/qa
            git pull origin qa

            # Asegurar que Docker est√° instalado y corriendo
            sudo yum update -y
            sudo yum install -y docker git
            sudo systemctl start docker
            sudo systemctl enable docker
            sudo usermod -aG docker ec2-user

            # Asegurar permisos de Docker
            newgrp docker << END
              sudo docker-compose down
              sudo docker-compose pull
              sudo docker-compose up --build -d
            END

            echo "‚úÖ Despliegue completado en EC2"
          EOF

      - name: Subir frontend a S3
        run: |
          ssh -i ~/.ssh/readybear-key.pem ec2-user@${{ secrets.EC2_HOST }} << 'EOF'
            echo "üöÄ Subiendo frontend a S3..."
            cd ~/ReadyBear26/frontendproduct

            if [ ! -d "dist" ]; then
              echo "‚ùå ERROR: No existe la carpeta 'dist/'. Ejecutando build..."
              npm install
              npm run build
            fi

            aws s3 sync dist/ s3://readybear-frontend --delete
            echo "‚úÖ Frontend actualizado en S3"
          EOF
